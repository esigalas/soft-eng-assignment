{  
   "swagger":"2.0",
   "info":{  
      "description":"The documentation for the you-food api",
      "version":"1.0",
      "title":"You-Food Api Documentation",
      "termsOfService":"urn:tos",
      "contact":{  
         "name": "You-Food Support",
         "url": "http://www.you-food.gr/support",
         "email": "support@you-food.gr"
      },
      "license":{  
         "name":"Apache 2.0",
         "url":"http://www.apache.org/licenses/LICENSE-2.0"
      }
   },
   "host":"you-food.gr",
   "basePath":"/api",
   "paths":{  
      "/api/cities":{  
         "get":{  
            "tags":[  
               "city-controller"
            ],
            "summary":"Gets all the cities",
            "operationId":"getAllCitiesUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/CityDTO"
                     }
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/directions/{polylineString}":{  
         "get":{  
            "tags":[  
               "directions-controller"
            ],
            "summary":"Accepts a Polyline algorithm encoded string of origin and destination latitude longitude pairs of coordinates and returns a polyline encoded string of the coordinates of the route that need to be followed to get from origin to destination.",
            "operationId":"getDrivingDirections",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "text/plain"
            ],
            "parameters":[  
               {  
                  "name":"polylineString",
                  "in":"path",
                  "description":"polylineString",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"string"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/occupancydetectorsystems":{  
         "get":{  
            "tags":[  
               "occupancy-detector-system-controller"
            ],
            "summary":"Gets all the occupancy detector systems ",
            "operationId":"getAllOdsUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/OccupancyDetectorSystemDTO"
                     }
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "post":{  
            "tags":[  
               "occupancy-detector-system-controller"
            ],
            "summary":"Create a new OccupancyDetectotSystem based on its type",
            "operationId":"createNewOdsUsingPOST_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"ods",
                  "description":"ods",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/OccupancyDetectorSystemDTO"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/OccupancyDetectorSystemDTO"
                  }
               },
               "201":{  
                  "description":"Created"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/occupancydetectorsystems/?type=Sensor":{  
         "get":{  
            "tags":[  
               "occupancy-detector-system-controller"
            ],
            "summary":"Gets all the SensorBased occupancy detector systems",
            "operationId":"getAllSensorBasedOdsUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/OccupancyDetectorSystemDTO"
                     }
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/occupancydetectorsystems/{id}":{  
         "get":{  
            "tags":[  
               "occupancy-detector-system-controller"
            ],
            "summary":"Gets an occupancy detector system basen on its id",
            "operationId":"getOdsUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/OccupancyDetectorSystemDTO"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "put":{  
            "tags":[  
               "occupancy-detector-system-controller"
            ],
            "summary":"Update an occupancy detector system",
            "operationId":"updateAreaUsingPUT_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "in":"body",
                  "name":"ods",
                  "description":"ods",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/OccupancyDetectorSystemEditDTO"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/OccupancyDetectorSystemDTO"
                  }
               },
               "201":{  
                  "description":"Created"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/parkingareas":{  
         "get":{  
            "tags":[  
               "parking-area-controller"
            ],
            "summary":"Gets all the parking areas",
            "operationId":"getAllAreasUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/ParkingAreaDTO"
                     }
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "post":{  
            "tags":[  
               "parking-area-controller"
            ],
            "summary":"Creates a new parking area",
            "operationId":"createAreaUsingPOST",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"parkingArea",
                  "description":"parkingArea",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaAddDTO"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaDTO"
                  }
               },
               "201":{  
                  "description":"Created"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/parkingareas/{id}":{  
         "get":{  
            "tags":[  
               "parking-area-controller"
            ],
            "summary":"Gets a specific parking area using its id",
            "operationId":"getAreaUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaOdsDTO"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "put":{  
            "tags":[  
               "parking-area-controller"
            ],
            "summary":"Update a parking area",
            "operationId":"updateAreaUsingPUT_3",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "in":"body",
                  "name":"parkingArea",
                  "description":"parkingArea",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaEditDTO"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaDTO"
                  }
               },
               "201":{  
                  "description":"Created"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "delete":{  
            "tags":[  
               "parking-area-controller"
            ],
            "summary":"Delete a parking area",
            "operationId":"removeAreaUsingDELETE",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaDTO"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "204":{  
                  "description":"No Content"
               },
               "403":{  
                  "description":"Forbidden"
               }
            }
         },
         "patch":{  
            "tags":[  
               "parking-area-controller"
            ],
            "summary":"Change the status of a parking area",
            "operationId":"changeAreaStatusUsingPATCH",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingAreaDTO"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "204":{  
                  "description":"No Content"
               },
               "403":{  
                  "description":"Forbidden"
               }
            }
         }
      },
      "/api/parkingproviders":{  
         "get":{  
            "tags":[  
               "parking-provider-controller"
            ],
            "summary":"Find and return all Parking Providers",
            "operationId":"getAllParkingProviders",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/ParkingProviderDTO"
                     }
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/parkingproviders/{id}":{  
         "get":{  
            "tags":[  
               "parking-provider-controller"
            ],
            "summary":"Find and return Parking Provider by id",
            "operationId":"getParkingProviderById_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingProviderDTO"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/parkingrates":{  
         "get":{  
            "tags":[  
               "parking-rate-controller"
            ],
            "summary":"Find and return all Parking Rates",
            "operationId":"getAllParkingRatesUsingGET_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "type":"array",
                     "items":{  
                        "$ref":"#/definitions/ParkingRateDTO"
                     }
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "post":{  
            "tags":[  
               "parking-rate-controller"
            ],
            "summary":"Create a new parking rate",
            "operationId":"createParkingRateUsingPOST_1",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "application/json"
            ],
            "parameters":[  
               {  
                  "in":"body",
                  "name":"parkingRate",
                  "description":"parkingRate",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/ParkingRateAddDTO"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingRateDTO"
                  }
               },
               "201":{  
                  "description":"Created"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      },
      "/api/parkingrates/{id}":{  
         "get":{  
            "tags":[  
               "parking-rate-controller"
            ],
            "summary":"Gets a specific parking rate using its id",
            "operationId":"getRateUsingGET",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingRateDTO"
                  }
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "put":{  
            "tags":[  
               "parking-rate-controller"
            ],
            "summary":"Update a parking rate",
            "operationId":"updateAreaUsingPUT_5",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "in":"body",
                  "name":"parkingRate",
                  "description":"parkingRate",
                  "required":true,
                  "schema":{  
                     "$ref":"#/definitions/ParkingRateEditDTO"
                  }
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK",
                  "schema":{  
                     "$ref":"#/definitions/ParkingRateDTO"
                  }
               },
               "201":{  
                  "description":"Created"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         },
         "delete":{  
            "tags":[  
               "parking-rate-controller"
            ],
            "summary":"Delete a parking rate",
            "operationId":"removeRateUsingDELETE",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"id",
                  "in":"path",
                  "description":"id",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "204":{  
                  "description":"No Content"
               },
               "403":{  
                  "description":"Forbidden"
               }
            }
         }
      },
      "/api/tinynode":{  
         "get":{  
            "tags":[  
               "tiny-node-data-controller"
            ],
            "summary":"Webhook for requests made by TinyNode Gateways pushing sensor and control data",
            "operationId":"readTinyNodeData",
            "consumes":[  
               "application/json"
            ],
            "produces":[  
               "*/*"
            ],
            "parameters":[  
               {  
                  "name":"table",
                  "in":"query",
                  "description":"table",
                  "required":true,
                  "type":"string"
               },
               {  
                  "name":"nodeID",
                  "in":"query",
                  "description":"nodeID",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"locationID",
                  "in":"query",
                  "description":"locationID",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"nodeTS",
                  "in":"query",
                  "description":"nodeTS",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "name":"serverTS",
                  "in":"query",
                  "description":"serverTS",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {  
                  "name":"occ",
                  "in":"query",
                  "description":"occ",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"amrX",
                  "in":"query",
                  "description":"amrX",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"amrY",
                  "in":"query",
                  "description":"amrY",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"amrZ",
                  "in":"query",
                  "description":"amrZ",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"centerX",
                  "in":"query",
                  "description":"centerX",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"centerY",
                  "in":"query",
                  "description":"centerY",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"centerZ",
                  "in":"query",
                  "description":"centerZ",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"parentId",
                  "in":"query",
                  "description":"parentId",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"voltage",
                  "in":"query",
                  "description":"voltage",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"tBoot",
                  "in":"query",
                  "description":"tBoot",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"tRx",
                  "in":"query",
                  "description":"tRx",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"tTx",
                  "in":"query",
                  "description":"tTx",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"version",
                  "in":"query",
                  "description":"version",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"temp",
                  "in":"query",
                  "description":"temp",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"message",
                  "in":"query",
                  "description":"message",
                  "required":false,
                  "type":"string"
               },
               {  
                  "name":"v1",
                  "in":"query",
                  "description":"v1",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"v2",
                  "in":"query",
                  "description":"v2",
                  "required":false,
                  "type":"integer",
                  "format":"int32"
               },
               {  
                  "name":"timestamp",
                  "in":"query",
                  "description":"timestamp",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{  
               "200":{  
                  "description":"OK"
               },
               "401":{  
                  "description":"Unauthorized"
               },
               "403":{  
                  "description":"Forbidden"
               },
               "404":{  
                  "description":"Not Found"
               }
            }
         }
      }
   },
   
   definitions:{
      Customer:{
         "type":"object"
         "required":[
            "name",
            "username",
            "password",
         ],
         "properties":{
            "id":"integer"

            "name":
         }

      }
   }


   "definitions":{
      Customer":{
         "type":"object",
         "required":[
            
         ],

      }





      "AreaPointDTO":{  
         "type":"object",
         "required":[  
            "lat",
            "lng"
         ],
         "properties":{  
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "lat":{  
               "type":"number",
               "format":"double",
               "description":"The latitude of the AreaPoint."
            },
            "lng":{  
               "type":"number",
               "format":"double",
               "description":"The longitude of the AreaPoint."
            }
         },
         "description":"The class AreaPoint represents a specific point on the map.Each AreaCoverage consists of a list of AreaPoints."
      },
      "ParkingProviderDTO":{  
         "type":"object",
         "required":[  
            "name"
         ],
         "properties":{  
            "address":{  
               "type":"string",
               "description":"The physical address of the provider."
            },
            "city":{  
               "type":"string",
               "description":"The city in which the provider is located."
            },
            "created":{  
               "description":"The date on which the ParkingProvider was added to the system.",
               "$ref":"#/definitions/DateTime"
            },
            "email":{  
               "type":"string",
               "description":"The email address of the provider."
            },
            "name":{  
               "type":"string",
               "description":"The legal name of the provider."
            },
            "parkingAreas":{  
               "type":"array",
               "description":"The ParkingAreas which belong to this ParkingProvider.",
               "items":{  
                  "$ref":"#/definitions/ParkingAreaDTO"
               }
            },
            "postalCode":{  
               "type":"string",
               "description":"The postalCode of the provider."
            },
            "telephone":{  
               "type":"string",
               "description":"The telephone number of the provider."
            },
            "type":{  
               "type":"string",
               "description":"The sector in which the provider belongs. It can be public or private sector.",
               "enum":[  
                  "PUBLIC",
                  "PRIVATE"
               ]
            }
         },
         "description":"The class ParkingProvider represents the owner of one or more parkings.A ParkingProvider can be created only by a User with SuperAdmin Role and has its own Users.The Users of a ParkingProvider have the permissions to perform actions for the Provider, like adding a ParkingArea."
      },
      "ParkingAreaAddDTO":{  
         "type":"object",
         "properties":{  
            "areaCoverage":{  
               "$ref":"#/definitions/AreaCoverageDTO"
            },
            "cityId":{  
               "type":"integer",
               "format":"int64"
            },
            "enabled":{  
               "type":"boolean"
            },
            "freeOfCharge":{  
               "type":"boolean"
            },
            "name":{  
               "type":"string"
            },
            "occupiedParkingSpaces":{  
               "type":"integer",
               "format":"int32"
            },
            "odsId":{  
               "type":"integer",
               "format":"int64"
            },
            "onstreet":{  
               "type":"boolean"
            },
            "parkingRateId":{  
               "type":"integer",
               "format":"int64"
            },
            "parkingSpaces":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/ParkingSpaceAddDTO"
               }
            },
            "timetable":{  
               "type":"string"
            },
            "totalParkingSpaces":{  
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "OccupancyDetectorSystemDTO":{  
         "type":"object",
         "properties":{  
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string"
            },
            "parkingArea":{  
               "type":"string"
            },
            "sensors":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/SensorDTO"
               }
            },
            "type":{  
               "type":"string"
            }
         }
      },
      "SensorDTO":{  
         "type":"object",
         "properties":{  
            "areaPoint":{  
               "$ref":"#/definitions/AreaPointDTO"
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "key":{  
               "type":"string"
            },
            "lastUpdated":{  
               "$ref":"#/definitions/DateTime"
            },
            "parkingSpace":{  
               "$ref":"#/definitions/ParkingSpaceDTO"
            },
            "temperature":{  
               "type":"number",
               "format":"float"
            }
         }
      },
      "OccupancyDetectorSystemEditDTO":{  
         "type":"object",
         "properties":{  
            "addedSensor":{  
               "type":"boolean"
            },
            "changedSensor":{  
               "type":"boolean"
            },
            "changedType":{  
               "type":"boolean"
            },
            "deletedSensors":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/SensorEditDTO"
               }
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string"
            },
            "sensors":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/SensorEditDTO"
               }
            },
            "type":{  
               "type":"string"
            }
         }
      },
      "ParkingRateEditDTO":{  
         "type":"object",
         "properties":{  
            "fees":{  
               "type":"string"
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string"
            },
            "timeDuration":{  
               "type":"integer",
               "format":"int32"
            },
            "timeUnit":{  
               "type":"string",
               "enum":[  
                  "MINUTES",
                  "HOURS",
                  "DAYS"
               ]
            }
         }
      },
      "ParkingSpaceDTO":{  
         "type":"object",
         "required":[  
            "name",
            "type",
            "vehicleType"
         ],
         "properties":{  
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string",
               "description":"The name of the ParkingSpace"
            },
            "occupied":{  
               "type":"boolean"
            },
            "type":{  
               "type":"string",
               "description":"The type of parking. It can be permitted, nonpermitted or specialneeds.",
               "enum":[  
                  "PERMITTED",
                  "NONPERMITTED",
                  "SPECIALNEEDS"
               ]
            },
            "vehicleType":{  
               "type":"string",
               "description":"The type of vehicles which can park at this space.",
               "enum":[  
                  "SMALL",
                  "NORMAL",
                  "BIG"
               ]
            }
         },
         "description":"The class ParkingSpace represents a specific location where a driver can park.Each ParkingSpace belong to a ParkingArea."
      },
      "SensorEditDTO":{  
         "type":"object",
         "properties":{  
            "areaPoint":{  
               "$ref":"#/definitions/AreaPointDTO"
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "key":{  
               "type":"string"
            },
            "parkingSpace":{  
               "$ref":"#/definitions/ParkingSpaceDTO"
            }
         }
      },
      "DateTime":{  
         "type":"object",
         "properties":{  
            "afterNow":{  
               "type":"boolean"
            },
            "beforeNow":{  
               "type":"boolean"
            },
            "centuryOfEra":{  
               "type":"integer",
               "format":"int32"
            },
            "chronology":{  
               "$ref":"#/definitions/Chronology"
            },
            "dayOfMonth":{  
               "type":"integer",
               "format":"int32"
            },
            "dayOfWeek":{  
               "type":"integer",
               "format":"int32"
            },
            "dayOfYear":{  
               "type":"integer",
               "format":"int32"
            },
            "equalNow":{  
               "type":"boolean"
            },
            "era":{  
               "type":"integer",
               "format":"int32"
            },
            "hourOfDay":{  
               "type":"integer",
               "format":"int32"
            },
            "millis":{  
               "type":"integer",
               "format":"int64"
            },
            "millisOfDay":{  
               "type":"integer",
               "format":"int32"
            },
            "millisOfSecond":{  
               "type":"integer",
               "format":"int32"
            },
            "minuteOfDay":{  
               "type":"integer",
               "format":"int32"
            },
            "minuteOfHour":{  
               "type":"integer",
               "format":"int32"
            },
            "monthOfYear":{  
               "type":"integer",
               "format":"int32"
            },
            "secondOfDay":{  
               "type":"integer",
               "format":"int32"
            },
            "secondOfMinute":{  
               "type":"integer",
               "format":"int32"
            },
            "weekOfWeekyear":{  
               "type":"integer",
               "format":"int32"
            },
            "weekyear":{  
               "type":"integer",
               "format":"int32"
            },
            "year":{  
               "type":"integer",
               "format":"int32"
            },
            "yearOfCentury":{  
               "type":"integer",
               "format":"int32"
            },
            "yearOfEra":{  
               "type":"integer",
               "format":"int32"
            },
            "zone":{  
               "$ref":"#/definitions/DateTimeZone"
            }
         }
      },
      "DateTimeZone":{  
         "type":"object",
         "properties":{  
            "fixed":{  
               "type":"boolean"
            },
            "id":{  
               "type":"string"
            }
         }
      },
      "ParkingRateAddDTO":{  
         "type":"object",
         "properties":{  
            "fees":{  
               "type":"string"
            },
            "name":{  
               "type":"string"
            },
            "timeDuration":{  
               "type":"integer",
               "format":"int32"
            },
            "timeUnit":{  
               "type":"string",
               "enum":[  
                  "MINUTES",
                  "HOURS",
                  "DAYS"
               ]
            }
         }
      },
      "ParkingAreaEditDTO":{  
         "type":"object",
         "properties":{  
            "areaCoverage":{  
               "$ref":"#/definitions/AreaCoverageDTO"
            },
            "cityChanged":{  
               "type":"boolean"
            },
            "cityId":{  
               "type":"integer",
               "format":"int64"
            },
            "enabled":{  
               "type":"boolean"
            },
            "freeOfCharge":{  
               "type":"boolean"
            },
            "locationChanged":{  
               "type":"boolean"
            },
            "name":{  
               "type":"string"
            },
            "odsId":{  
               "type":"integer",
               "format":"int64"
            },
            "onstreet":{  
               "type":"boolean"
            },
            "parkingRateId":{  
               "type":"integer",
               "format":"int64"
            },
            "parkingSpaceAdded":{  
               "type":"boolean"
            },
            "parkingSpaceChanged":{  
               "type":"boolean"
            },
            "parkingSpaces":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/ParkingSpaceEditDTO"
               }
            },
            "parkingSpacesDeleted":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/ParkingSpaceDTO"
               }
            },
            "timetable":{  
               "type":"string"
            },
            "totalParkingSpaces":{  
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "ParkingAreaOdsDTO":{  
         "type":"object",
         "properties":{  
            "areaCoverage":{  
               "$ref":"#/definitions/AreaCoverageDTO"
            },
            "city":{  
               "type":"string"
            },
            "enabled":{  
               "type":"boolean"
            },
            "freeOfCharge":{  
               "type":"boolean"
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string"
            },
            "namedParkingSpaces":{  
               "type":"boolean"
            },
            "occupancyDetectorSystem":{  
               "$ref":"#/definitions/OccupancyDetectorSystemDTO"
            },
            "occupiedParkingSpaces":{  
               "type":"integer",
               "format":"int32"
            },
            "onstreet":{  
               "type":"boolean"
            },
            "parkingRateId":{  
               "type":"integer",
               "format":"int64"
            },
            "parkingSpaces":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/ParkingSpaceDTO"
               }
            },
            "timetable":{  
               "type":"string"
            },
            "totalParkingSpaces":{  
               "type":"integer",
               "format":"int32"
            }
         }
      },
      "ParkingSpaceAddDTO":{  
         "type":"object",
         "properties":{  
            "name":{  
               "type":"string"
            },
            "occupancy":{  
               "type":"boolean"
            },
            "sensorId":{  
               "type":"integer",
               "format":"int64"
            },
            "type":{  
               "type":"string",
               "enum":[  
                  "PERMITTED",
                  "NONPERMITTED",
                  "SPECIALNEEDS"
               ]
            },
            "vehicleType":{  
               "type":"string",
               "enum":[  
                  "SMALL",
                  "NORMAL",
                  "BIG"
               ]
            }
         }
      },
      "ParkingAreaDTO":{  
         "type":"object",
         "required":[  
            "enabled",
            "freeOfCharge",
            "name",
            "namedParkingSpaces",
            "occupiedParkingSpaces",
            "onstreet",
            "totalParkingSpaces"
         ],
         "properties":{  
            "areaCoverage":{  
               "$ref":"#/definitions/AreaCoverageDTO"
            },
            "city":{  
               "type":"string"
            },
            "enabled":{  
               "type":"boolean",
               "example":false,
               "description":"It indicates if someone can use this parking area or not."
            },
            "freeOfCharge":{  
               "type":"boolean",
               "example":false,
               "description":"It indicates if someone can park without charge."
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string",
               "description":"The name of the ParkingArea."
            },
            "namedParkingSpaces":{  
               "type":"boolean",
               "example":false,
               "description":"It indicates if each parking space has name or not."
            },
            "occupiedParkingSpaces":{  
               "type":"integer",
               "format":"int32",
               "description":"The amount of the occupied parking spaces. Its value is updated eveytime an occupancy change occurs."
            },
            "onstreet":{  
               "type":"boolean",
               "example":false,
               "description":"It indicates if the parking spaces are on the road or inside a closed space."
            },
            "parkingSpaces":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/ParkingSpaceDTO"
               }
            },
            "timetable":{  
               "type":"string",
               "description":"The days and the times on which someone can use this area. If it is null, then the parking area is available 24/7."
            },
            "totalParkingSpaces":{  
               "type":"integer",
               "format":"int32",
               "description":"The amount of the parking spaces which belongs to this parking area."
            }
         },
         "description":"The class ParkingArea represents an area where drivers can find parking spaces.A ParkingArea can be added for a ParkingProvider by its Users and can have a list of ParkingSpaces."
      },
      "ParkingRateDTO":{  
         "type":"object",
         "properties":{  
            "fees":{  
               "type":"string"
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string"
            },
            "parkingAreas":{  
               "type":"array",
               "items":{  
                  "$ref":"#/definitions/ParkingAreaDTO"
               }
            },
            "timeDuration":{  
               "type":"integer",
               "format":"int32"
            },
            "timeUnit":{  
               "type":"string",
               "enum":[  
                  "MINUTES",
                  "HOURS",
                  "DAYS"
               ]
            }
         }
      },
      "Chronology":{  
         "type":"object",
         "properties":{  
            "zone":{  
               "$ref":"#/definitions/DateTimeZone"
            }
         }
      },
      "ParkingSpaceEditDTO":{  
         "type":"object",
         "required":[  
            "name",
            "type",
            "vehicleType"
         ],
         "properties":{  
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string",
               "description":"The name of the ParkingSpace"
            },
            "occupancy":{  
               "type":"boolean"
            },
            "sensorId":{  
               "type":"integer",
               "format":"int64"
            },
            "type":{  
               "type":"string",
               "description":"The type of parking. It can be permitted, nonpermitted or specialneeds.",
               "enum":[  
                  "PERMITTED",
                  "NONPERMITTED",
                  "SPECIALNEEDS"
               ]
            },
            "vehicleType":{  
               "type":"string",
               "description":"The type of vehicles which can park at this space.",
               "enum":[  
                  "SMALL",
                  "NORMAL",
                  "BIG"
               ]
            }
         },
         "description":"The class ParkingSpace represents a specific location where a driver can park.Each ParkingSpace belong to a ParkingArea."
      },
      "AreaCoverageDTO":{  
         "type":"object",
         "required":[  
            "areaPoints"
         ],
         "properties":{  
            "areaPoints":{  
               "type":"array",
               "description":"The list of the AreaPoints of this AreaCoverage.",
               "items":{  
                  "$ref":"#/definitions/AreaPointDTO"
               }
            }
         },
         "description":"The class AreaCoverage represents a physical location on the map.While adding a ParkingArea, the ParkingProvider Admin should create the AreaCoverage of it."
      },
      "CityDTO":{  
         "type":"object",
         "required":[  
            "name"
         ],
         "properties":{  
            "areaPoint":{  
               "description":"The areaPoint of this City.",
               "$ref":"#/definitions/AreaPointDTO"
            },
            "id":{  
               "type":"integer",
               "format":"int64"
            },
            "name":{  
               "type":"string",
               "description":"The name of the City."
            }
         },
         "description":"The class City represents a city and is used to be associated with ParkingAreas.Cities are added by the SuperAdmin and a ParkingProvider Admin can associate one of them with a ParkingArea."
      }
   }
}